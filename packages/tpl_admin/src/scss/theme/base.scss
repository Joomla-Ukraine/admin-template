//
// Component: Base
//
// ========================================================================

// Variables
// ========================================================================

//
// New
//

// Body
// ========================================================================

@mixin hook-base-body() {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	text-rendering: optimizeLegibility;
}

// Links
// ========================================================================

@mixin hook-base-link() {
	/*    &:focus {
			outline: none;
		}*/
}

@mixin hook-base-link-hover() {
	-webkit-transition: .4s ease-in-out;
	transition: .4s ease-in-out;
}

// Text-level semantics
// ========================================================================

// Headings
// ========================================================================

// @mixin hook-base-heading(){}

// @mixin hook-base-h1(){}

// @mixin hook-base-h2(){}

// @mixin hook-base-h3(){}

// @mixin hook-base-h4(){}

// @mixin hook-base-h5(){}

// @mixin hook-base-h6(){}

// Horizontal rules
// ========================================================================

// @mixin hook-base-hr(){}


// Blockquotes
// ========================================================================

@mixin hook-base-blockquote() {
	color: $base-blockquote-color;
}

@mixin hook-base-blockquote-footer() {
	
	color: $base-blockquote-footer-color;
	
	&::before {
		content: "â€” ";
	}
	
}

// Preformatted text
// ========================================================================

@mixin hook-base-code() {
	padding: $base-code-padding-vertical $base-code-padding-horizontal;
	background: $base-code-background;
}

@mixin hook-base-pre() {
	padding: $base-pre-padding;
	border: $base-pre-border-width solid $base-pre-border;
	border-radius: $base-pre-border-radius;
	background: $base-pre-background;
}

// Miscellaneous
// ========================================================================

// @mixin hook-base-misc(){}

// Inverse
// ========================================================================

$inverse-base-blockquote-color: $inverse-global-emphasis-color !default;
$inverse-base-blockquote-footer-color: $inverse-global-color !default;

// @mixin hook-inverse-base-link(){}
// @mixin hook-inverse-base-link-hover(){}

// @mixin hook-inverse-base-heading(){}

// @mixin hook-inverse-base-h1(){}
// @mixin hook-inverse-base-h2(){}
// @mixin hook-inverse-base-h3(){}
// @mixin hook-inverse-base-h4(){}
// @mixin hook-inverse-base-h5(){}
// @mixin hook-inverse-base-h6(){}

// @mixin hook-inverse-base-hr(){}

@mixin hook-inverse-base-blockquote() {
	color: $inverse-base-blockquote-color;
}

@mixin hook-inverse-base-blockquote-footer() {
	color: $inverse-base-blockquote-footer-color;
}

@mixin hook-inverse-component-base() {
	
	color: $inverse-base-color;
	
	// Base
	// ========================================================================
	
	//
	// Link
	//
	
	a,
	.uk-link {
		color: $inverse-base-link-color;
		@if (mixin-exists(hook-inverse-base-link)) {
			@include hook-inverse-base-link();
		}
	}
	
	a:hover,
	.uk-link:hover {
		color: $inverse-base-link-hover-color;
		@if (mixin-exists(hook-inverse-base-link-hover)) {
			@include hook-inverse-base-link-hover();
		}
	}
	
	//
	// Code
	//
	:not(pre) > code,
	:not(pre) > kbd,
	:not(pre) > samp {
		color: $inverse-base-code-color;
		@if (mixin-exists(hook-inverse-base-code)) {
			@include hook-inverse-base-code();
		}
	}
	
	//
	// Emphasize
	//
	em {
		color: $inverse-base-em-color;
	}
	
	//
	// Headings
	//
	h1, .uk-h1,
	h2, .uk-h2,
	h3, .uk-h3,
	h4, .uk-h4,
	h5, .uk-h5,
	h6, .uk-h6,
	.uk-heading-small,
	.uk-heading-medium,
	.uk-heading-large,
	.uk-heading-xlarge,
	.uk-heading-2xlarge {
		color: $inverse-base-heading-color;
		@if (mixin-exists(hook-inverse-base-heading)) {
			@include hook-inverse-base-heading();
		}
	}
	
	h1, .uk-h1 {
		@if (mixin-exists(hook-inverse-base-h1)) {
			@include hook-inverse-base-h1();
		}
	}
	
	h2, .uk-h2 {
		@if (mixin-exists(hook-inverse-base-h2)) {
			@include hook-inverse-base-h2();
		}
	}
	
	h3, .uk-h3 {
		@if (mixin-exists(hook-inverse-base-h3)) {
			@include hook-inverse-base-h3();
		}
	}
	
	h4, .uk-h4 {
		@if (mixin-exists(hook-inverse-base-h4)) {
			@include hook-inverse-base-h4();
		}
	}
	
	h5, .uk-h5 {
		@if (mixin-exists(hook-inverse-base-h5)) {
			@include hook-inverse-base-h5();
		}
	}
	
	h6, .uk-h6 {
		@if (mixin-exists(hook-inverse-base-h6)) {
			@include hook-inverse-base-h6();
		}
	}
	
	//
	// Blockquotes
	//
	blockquote {
		@if (mixin-exists(hook-inverse-base-blockquote)) {
			@include hook-inverse-base-blockquote();
		}
	}
	
	blockquote footer {
		@if (mixin-exists(hook-inverse-base-blockquote-footer)) {
			@include hook-inverse-base-blockquote-footer();
		}
	}
	
	//
	// Horizontal rules
	//
	hr, .uk-hr {
		border-top-color: $inverse-base-hr-border;
		@if (mixin-exists(hook-inverse-base-hr)) {
			@include hook-inverse-base-hr();
		}
	}
	
}
