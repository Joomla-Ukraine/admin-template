//
// Component: Breadcrumb
//
// ========================================================================

// Variables
// ========================================================================

//
// New
//
$breadcrumb-divider-margin-horizontal:          10px;
$breadcrumb-item-font-size:                     13px;
$breadcrumb-item-color:                         $color-steel;
$breadcrumb-item-hover-color:                   $color-steel;
$breadcrumb-item-active-color:                  $color-steel;
$breadcrumb-divider-color:                      $color-steel;

// Component
// ========================================================================

@mixin hook-breadcrumb(){
  flex-wrap: nowrap;
  overflow-y: hidden;
  white-space: nowrap;
}

// Items
// ========================================================================

// @mixin hook-breadcrumb-item(){}

// @mixin hook-breadcrumb-item-hover(){}

// @mixin hook-breadcrumb-item-disabled(){}

// @mixin hook-breadcrumb-item-active(){}

// @mixin hook-breadcrumb-divider(){}

// Miscellaneous
// ========================================================================

// @mixin hook-breadcrumb-misc(){}

// Inverse
// ========================================================================

// @mixin hook-inverse-breadcrumb-item(){}
// @mixin hook-inverse-breadcrumb-item-hover(){}
// @mixin hook-inverse-breadcrumb-item-disabled(){}
// @mixin hook-inverse-breadcrumb-item-active(){}

// @mixin hook-inverse-breadcrumb-divider(){}

@mixin hook-inverse-component-breadcrumb() {
  .uk-breadcrumb > * > * {
    color: $inverse-breadcrumb-item-color;
    
    @if (mixin-exists(hook-inverse-breadcrumb-item)) {
      @include hook-inverse-breadcrumb-item();
    }
  }
  
  .uk-breadcrumb > * > :hover,
  .uk-breadcrumb > * > :focus {
    color: $inverse-breadcrumb-item-hover-color;
    
    @if (mixin-exists(hook-inverse-breadcrumb-item-hover)) {
      @include hook-inverse-breadcrumb-item-hover();
    }
  }
  
  .uk-breadcrumb > .uk-disabled > * {
    @if (mixin-exists(hook-inverse-breadcrumb-item-disabled)) {
      @include hook-inverse-breadcrumb-item-disabled();
    }
  }
  
  .uk-breadcrumb > :last-child > * {
    color: $inverse-breadcrumb-item-active-color;
    
    @if (mixin-exists(hook-inverse-breadcrumb-item-active)) {
      @include hook-inverse-breadcrumb-item-active();
    }
  }
  
  //
  // Divider
  //
  .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before {
    color: $inverse-breadcrumb-divider-color;
    
    @if (mixin-exists(hook-inverse-breadcrumb-divider)) {
      @include hook-inverse-breadcrumb-divider();
    }
  }
}
