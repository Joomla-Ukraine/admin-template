//
// Component: Button
//
// ========================================================================

// Variables
// ========================================================================

// Component
// ========================================================================

@mixin hook-button() {
	border-radius: $button-border-radius;
	text-transform: $button-text-transform;
	transition: 0.1s ease-in-out;
	transition-property: color, background-color, border-color;
}

// @mixin hook-button-hover(){}

// @mixin hook-button-focus(){}

// @mixin hook-button-active(){}

// Style modifiers
// ========================================================================

/*
 * Default
 */
@mixin hook-button-default() {
	border: $button-border-width solid $button-default-border;
}

@mixin hook-button-default-hover() {
	border-color: $button-default-hover-border;
}

@mixin hook-button-default-active() {
	border-color: $button-default-active-border;
}

//
// Primary
//
@mixin hook-button-primary() {
	border: $button-border-width solid $color-blue;
}

//@mixin hook-button-primary-hover(){}
//@mixin hook-button-primary-active(){}

//
// Secondary
//
@mixin hook-button-secondary() {
	border: $button-border-width solid transparent;
}

// @mixin hook-button-secondary-hover(){}

// @mixin hook-button-secondary-active(){}

//
// Danger
//
@mixin hook-button-danger() {
	border: $button-border-width solid transparent;
}

// @mixin hook-button-danger-hover(){}

// @mixin hook-button-danger-active(){}

// Disabled
// ========================================================================
@mixin hook-button-disabled() {
	border-color: $button-disabled-border;
}

// Size modifiers
// ========================================================================

// @mixin hook-button-small(){}

// @mixin hook-button-large(){}

// Text modifier
// ========================================================================

@mixin hook-button-text() {
	
	position: relative;
	
	&::before {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		right: 100%;
		border-bottom: $button-text-border-width solid $button-text-border;
		transition: right 0.3s ease-out;
	}
	
}

@mixin hook-button-text-hover() {
	
	&::before {
		right: 0;
	}
	
}

@mixin hook-button-text-disabled() {
	
	&::before {
		display: none;
	}
	
}

// Link modifier
// ========================================================================

// @mixin hook-button-link(){}

// Miscellaneous
// ========================================================================

@mixin hook-button-misc() {
	
	/* Group
	 ========================================================================== */
	
	/*
	 * Collapse border
	 */
	.uk-button-group > .uk-button:nth-child(n+2),
	.uk-button-group > div:nth-child(n+2) .uk-button {
		margin-left: (-$button-border-width);
	}
	
	/*
	 * Create position context to superimpose the successor elements border
	 * Known issue: If you use an `a` element as button and an icon inside,
	 * the active state will not work if you click the icon inside the button
	 * Workaround: Just use a `button` or `input` element as button
	 */
	.uk-button-group .uk-button:hover,
	.uk-button-group .uk-button:focus,
	.uk-button-group .uk-button:active,
	.uk-button-group .uk-button.uk-active {
		position: relative;
		z-index: 1;
	}
	
}

// Inverse
// ========================================================================
$inverse-button-default-background: transparent !default;
$inverse-button-default-color: $inverse-global-emphasis-color !default;
$inverse-button-default-hover-background: transparent !default;
$inverse-button-default-hover-color: $inverse-global-emphasis-color !default;
$inverse-button-default-active-background: transparent !default;
$inverse-button-default-active-color: $inverse-global-emphasis-color !default;

$inverse-button-text-color: $inverse-global-emphasis-color !default;
$inverse-button-text-hover-color: $inverse-global-emphasis-color !default;

// @mixin hook-inverse-button-primary(){}
// @mixin hook-inverse-button-primary-hover(){}
// @mixin hook-inverse-button-primary-active(){}

// @mixin hook-inverse-button-secondary(){}
// @mixin hook-inverse-button-secondary-hover(){}
// @mixin hook-inverse-button-secondary-active(){}


// @mixin hook-inverse-button-text-hover(){}
// @mixin hook-inverse-button-text-disabled(){}

// @mixin hook-inverse-button-link(){}

@mixin hook-inverse-button-default() {
	border-color: $inverse-global-color;
}

@mixin hook-inverse-button-default-hover() {
	border-color: $inverse-global-emphasis-color;
}

@mixin hook-inverse-button-default-active() {
	border-color: $inverse-global-emphasis-color;
}

@mixin hook-inverse-button-text() {
	&::before {
		border-bottom-color: $inverse-global-emphasis-color;
	}
}

@mixin hook-inverse-component-button() {
	
	//
	// Default
	//
	.uk-button-default {
		background-color: $inverse-button-default-background;
		color: $inverse-button-default-color;
		@if (mixin-exists(hook-inverse-button-default)) {
			@include hook-inverse-button-default();
		}
	}
	
	.uk-button-default:hover,
	.uk-button-default:focus {
		background-color: $inverse-button-default-hover-background;
		color: $inverse-button-default-hover-color;
		@if (mixin-exists(hook-inverse-button-default-hover)) {
			@include hook-inverse-button-default-hover();
		}
	}
	
	.uk-button-default:active,
	.uk-button-default.uk-active {
		background-color: $inverse-button-default-active-background;
		color: $inverse-button-default-active-color;
		@if (mixin-exists(hook-inverse-button-default-active)) {
			@include hook-inverse-button-default-active();
		}
	}
	
	//
	// Primary
	//
	.uk-button-primary {
		background-color: $inverse-button-primary-background;
		color: $inverse-button-primary-color;
		@if (mixin-exists(hook-inverse-button-primary)) {
			@include hook-inverse-button-primary();
		}
	}
	
	.uk-button-primary:hover,
	.uk-button-primary:focus {
		background-color: $inverse-button-primary-hover-background;
		color: $inverse-button-primary-hover-color;
		@if (mixin-exists(hook-inverse-button-primary-hover)) {
			@include hook-inverse-button-primary-hover();
		}
	}
	
	.uk-button-primary:active,
	.uk-button-primary.uk-active {
		background-color: $inverse-button-primary-active-background;
		color: $inverse-button-primary-active-color;
		@if (mixin-exists(hook-inverse-button-primary-active)) {
			@include hook-inverse-button-primary-active();
		}
	}
	
	//
	// Secondary
	//
	.uk-button-secondary {
		background-color: $inverse-button-secondary-background;
		color: $inverse-button-secondary-color;
		@if (mixin-exists(hook-inverse-button-secondary)) {
			@include hook-inverse-button-secondary();
		}
	}
	
	.uk-button-secondary:hover,
	.uk-button-secondary:focus {
		background-color: $inverse-button-secondary-hover-background;
		color: $inverse-button-secondary-hover-color;
		@if (mixin-exists(hook-inverse-button-secondary-hover)) {
			@include hook-inverse-button-secondary-hover();
		}
	}
	
	.uk-button-secondary:active,
	.uk-button-secondary.uk-active {
		background-color: $inverse-button-secondary-active-background;
		color: $inverse-button-secondary-active-color;
		@if (mixin-exists(hook-inverse-button-secondary-active)) {
			@include hook-inverse-button-secondary-active();
		}
	}
	
	//
	// Text
	//
	.uk-button-text {
		color: $inverse-button-text-color;
		@if (mixin-exists(hook-inverse-button-text)) {
			@include hook-inverse-button-text();
		}
	}
	
	.uk-button-text:hover,
	.uk-button-text:focus {
		color: $inverse-button-text-hover-color;
		@if (mixin-exists(hook-inverse-button-text-hover)) {
			@include hook-inverse-button-text-hover();
		}
	}
	
	.uk-button-text:disabled {
		color: $inverse-button-text-disabled-color;
		@if (mixin-exists(hook-inverse-button-text-disabled)) {
			@include hook-inverse-button-text-disabled();
		}
	}
	
	//
	// Link
	//
	.uk-button-link {
		color: $inverse-button-link-color;
		@if (mixin-exists(hook-inverse-button-link)) {
			@include hook-inverse-button-link();
		}
	}
	
	.uk-button-link:hover,
	.uk-button-link:focus {
		color: $inverse-button-link-hover-color;
	}
	
}
